# –≠—Ç–∞–ø —Å–±–æ—Ä–∫–∏
FROM node:18-alpine AS build

WORKDIR /app

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∫–∏
RUN echo "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∫–∏..."

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY package.json ./
RUN echo "üì¶ –§–∞–π–ª package.json —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
RUN npm install --legacy-peer-deps
RUN echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
RUN echo "üìÇ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."
COPY . .
RUN echo "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
RUN echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"
RUN ls -la
RUN echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ tsconfig.json:"
RUN cat tsconfig.json

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Vite
RUN echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ vite.config.ts:"
RUN cat vite.config.ts

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
RUN echo "üèóÔ∏è –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
RUN npx tsc --noEmit && echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —É—Å–ø–µ—à–Ω–∞"
RUN NODE_ENV=production npx vite build --debug 2>&1 | tee build.log || (echo "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Vite:" && cat build.log && exit 1)

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ dist –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞
RUN mkdir -p dist
RUN echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–±–æ—Ä–∫–∏
RUN echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–±–æ—Ä–∫–∏:"
RUN ls -la dist/ || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–∞"
RUN echo "üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JS —Ñ–∞–π–ª–æ–≤:"
RUN find dist -name "*.js" | sort || echo "JS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
RUN echo "üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ CSS —Ñ–∞–π–ª–æ–≤:"
RUN find dist -name "*.css" | sort || echo "CSS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
RUN touch /app/diagnose.sh && \
    echo '#!/bin/sh' > /app/diagnose.sh && \
    echo 'echo "====================== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ù–¢–ï–ô–ù–ï–†–ê ======================"' >> /app/diagnose.sh && \
    echo 'echo "–í–µ—Ä—Å–∏—è Node.js: $(node -v)"' >> /app/diagnose.sh && \
    echo 'echo "–í–µ—Ä—Å–∏—è npm: $(npm -v)"' >> /app/diagnose.sh && \
    echo 'echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:"' >> /app/diagnose.sh && \
    echo 'find /app -type d -maxdepth 3 | sort' >> /app/diagnose.sh && \
    echo 'echo "–§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"' >> /app/diagnose.sh && \
    echo 'find /app -name "*.json" -o -name "*.js" -o -name "*.ts" | grep -v "node_modules" | sort' >> /app/diagnose.sh && \
    echo 'echo "=================================================================="' >> /app/diagnose.sh && \
    chmod +x /app/diagnose.sh && \
    cat /app/diagnose.sh

# –í—ã–ø–æ–ª–Ω—è–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
RUN /bin/sh /app/diagnose.sh

# –≠—Ç–∞–ø production - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –ª–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π –æ–±—Ä–∞–∑
FROM nginx:alpine-slim AS production
RUN echo "üöÄ –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ production-–æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ —ç—Ç–∞–ø–∞ —Å–±–æ—Ä–∫–∏
COPY --from=build /app/dist /usr/share/nginx/html
RUN echo "‚úÖ –§–∞–π–ª—ã —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ nginx"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ nginx.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–ª–∞–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
RUN echo 'user nginx;' > /etc/nginx/nginx.conf && \
    echo 'worker_processes 2;' >> /etc/nginx/nginx.conf && \
    echo 'error_log /var/log/nginx/error.log warn;' >> /etc/nginx/nginx.conf && \
    echo 'pid /var/run/nginx.pid;' >> /etc/nginx/nginx.conf && \
    echo '' >> /etc/nginx/nginx.conf && \
    echo 'events {' >> /etc/nginx/nginx.conf && \
    echo '    worker_connections 1024;' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf && \
    echo '' >> /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '    include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '    default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \
    echo '    sendfile on;' >> /etc/nginx/nginx.conf && \
    echo '    keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \
    echo '    aio off;' >> /etc/nginx/nginx.conf && \
    echo '    gzip on;' >> /etc/nginx/nginx.conf && \
    echo '    include /etc/nginx/conf.d/*.conf;' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

RUN echo "‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
RUN echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx:"
RUN cat /etc/nginx/nginx.conf
RUN cat /etc/nginx/conf.d/default.conf

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Nginx
RUN echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Nginx:"
RUN ls -la /usr/share/nginx/html

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
RUN touch /docker-entrypoint.d/check-assets.sh && \
    echo '#!/bin/sh' > /docker-entrypoint.d/check-assets.sh && \
    echo 'echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'for file in /usr/share/nginx/html/index.html $(find /usr/share/nginx/html -name "*.js" -o -name "*.css")' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'do' >> /docker-entrypoint.d/check-assets.sh && \
    echo '  if [ -f "$file" ]; then' >> /docker-entrypoint.d/check-assets.sh && \
    echo '    echo "‚úÖ –§–∞–π–ª $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"' >> /docker-entrypoint.d/check-assets.sh && \
    echo '    echo "   –†–∞–∑–º–µ—Ä: $(ls -lh $file | awk '"'"'{print $5}'"'"')"' >> /docker-entrypoint.d/check-assets.sh && \
    echo '  else' >> /docker-entrypoint.d/check-assets.sh && \
    echo '    echo "‚ùå –§–∞–π–ª $file –ù–ï –Ω–∞–π–¥–µ–Ω"' >> /docker-entrypoint.d/check-assets.sh && \
    echo '  fi' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'done' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ index.html:"' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'head -n 20 /usr/share/nginx/html/index.html' >> /docker-entrypoint.d/check-assets.sh && \
    echo 'echo "..."' >> /docker-entrypoint.d/check-assets.sh && \
    chmod +x /docker-entrypoint.d/check-assets.sh

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
COPY env.sh /docker-entrypoint.d/env.sh
RUN chmod +x /docker-entrypoint.d/env.sh

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
EXPOSE 80
RUN echo "üåê –ü–æ—Ä—Ç 80 –æ—Ç–∫—Ä—ã—Ç"

# –ó–∞–ø—É—Å–∫ nginx
CMD ["nginx", "-g", "daemon off;"]